syntax = "proto3";
import "cutmesh.proto"

// An augmented vertex rep using trilinear coordinates in the grid 
// and a bitmask
// World coordinates of the vertex is:
// p = origin + dx * ( [i,j] + [u,v] )
message Vertex2 {
    //the grid cell 
    int64 i = 1;
    int64 j = 2;
    //the trilinear coordinates
    double u = 4;
    double v = 5;
    //the bitmask
    bool ci = 7; // equiv to u == 0
    bool cj = 8; // equiv to v == 0
}
// An axis-aligned square tha goes from corner to corner+radius on
// two axes (the one that isn't axis)
message Edge2 {
    Vec2i corner = 1;
    int64 radius = 2;
    int64 axis = 3;
}

//// A face in a staggered grid as well as the indices of two Adaptive grid Cubes
message ExternalEdge2 {
    Edge2 geometry = 1;
    Vec2i dual_edge = 2;
}

// the geometric position of a cube that goes from corner to corner + radius
message Square2 {
    Vec2i corner = 1;
    int64 radius = 2;
}

message CutEdge2 {
    CutEdge edge = 1;
    Vec2d normal = 2;
}

// A representation of a cut-edge in terms of barycentric
// coordinates on teh edge that created it. 
// Should be aligned to a cut-edge's indices
message BarycentricEdge {
    int64 parent_id = 1;
    Vec2d barycentric_coordinates = 2;
}
message CutCell2 {
    // the numerical index of the cut-cell (may be redundant)
    int64 id = 1;
    // the region id for this cell, 0 typically means outside the input mesh
    int64 region = 2;
    // a map of cut-face indices and relative signs of the
    // boundary  (true = positive)
    map<int64,bool> entries = 3;
    // the grid cell that this cut-cell lies within
    Vec2i grid_cell = 4;

}

// A cut-cell mesh
message CutMesh2Proto {


    // hte coordinates of hte grid the mesh is built within
    Vec2d origin = 1;
    Vec2d dx = 2;
    Vec2i shape = 3;

    // the augmented vertices of the mesh
    repeated Vertex2 vertices = 4;


    // the indices of the edges of the mesh
    repeated Vec2i edges = 5;
    repeated CutFace2 faces = 6;
    // the barycentric coordinates of a cut-face's vertices with
    // respect to the triangle the cut-face came from
    // It's st ored as a map that is parallel to the faces array.
    // i.e mesh_faces has index idx if and only if
    // faces[idx].face_id is set and has the property
    // faces[idx].face_id == mesh_faces[idx].parent_id
    map<int64,BarycentricTriangleFace> mesh_faces= 13;

    // the vertices of the input mesh
    repeated Vec2d origV= 8;
    // the triangle indices of hte input mesh
    repeated Vec2i origE= 9;
    // the triangle indices of hte input mesh

    // cut-cell
    repeated int64 foldedFaces = 10;

    // Adaptive grid structure stuff
    // the indices and positions of cube-cells
    map<int64,Square2> external_cubes = 11;
    // the indices  and positions of square-faces that bound hte
    // cube-cells
    map<int64,ExternalEdge2> external_edges = 12;
    // the region ids for the cube-cells, they're aligned with the regions used for cut-cells
    map<int64,int64> square_regions = 14;
}
